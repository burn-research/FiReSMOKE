#!/bin/sh
#|                              _____ __  __  ____  _  ________            |
#|            ___              / ____|  \/  |/ __ \| |/ /  ____|           |
#|           /  _| _  ___  ___| (___ | \  / | |  | | ' /| |__              |
#|           | |_ | ||  _|/ _ \\___ \| |\/| | |  | |  < |  __|             |
#|           |  _|| || | |  __/ ___) | |  | | |__| | . \| |____.           |
#|           |_|  |_||_|  \___|_____/|_|  |_|\____/|_|\_\______|           |
#|                                                                         |
#|   Authors: A. Cuoci, R. Amaduzzi, A. Péquin, A. Parente                 |
#|                                                                         |
#|   Contacts: Alberto Cuoci                                               |
#|   email: alberto.cuoci@polimi.it                                        |
#|   Department of Chemistry, Materials and Chemical Engineering           |
#|   Politecnico di Milano                                                 |
#|   P.zza Leonardo da Vinci 32, 20133 Milano (Italy)                      |
#|                                                                         |
#|   Contacts: Ruggero Amaduzzi, Arthur Péquin, Alessandro Parente         |
#|	 email: alessandro.parente@ulb.be			                           |
#|   Aero-Thermo-Mechanical Department                                     |
#|   Université Libre de Bruxelles                                         |
#|   Avenue F. D. Roosevelt 50, 1050 Bruxelles (Belgium)                   |
#|                                                                         |
#|-------------------------------------------------------------------------|

Script=${0##*/}
VER=21

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE

Usage: ${0##*/} [OPTIONS]
options:
  -d | -dir            host directory mounted (defaults to current directory)
  -x | -xhost          use custom X authority and give container host network
  -h | -help           help
  -p | -paraview       include ParaView in the Docker image

Launches the OpenSMOKEsuite++ ${VER} Docker image.
- Requires installation of docker-engine.
- Runs a "containerized" bash shell environment where the user can run OpenFOAM
  and, optionally, ParaView (see below).
- The container mounts the user's file system so that case files are stored
  permanently.  The container mounts the current directory by default, but the
  user can also specify a particular directory using the "-d" option.
- Mounting the user's HOME directory is disallowed.
- The '-xhost' option is useful when accessing the host via 'ssh -X'.
  This option should only be used when strictly necessary, as it relies on the
  option '--net=host' when launching the container in Docker, which will
  give to the container full access to the Docker host network stack and
  potentially the host's system services that rely on network communication,
  making it potentially insecure.

Example:
To store data in ${HOME}/firesmoke2/${USER}-${VER}, the user can launch
${Script} either by:
    cd ${HOME}/firesmoke2/${USER}-${VER} && ${Script}
or
    ${Script} -d ${HOME}/OpenFOAM/${USER}-${VER}

Further Information:
ruggero.amaduzzi@ulb.be

Note:
The container user name appears as "firesmoke2" but it is just an alias.

USAGE
    exit 1
}

DOCKER_IMAGE='ruggeroamaduzzi/firesmoke2:latest' ## 'ubuntu:20.04'
MOUNT_DIR=$(pwd)
CUSTOM_XAUTH=""
DOCKER_OPTIONS=""

while [ "$#" -gt 0 ]
do
   case "$1" in
   -d | -dir)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      MOUNT_DIR=$2
      shift 2
      ;;
   -h | -help)
      usage
      ;;
   *)
      usage "Invalid option '$1'"
      ;;
    esac
done

[ -d "$MOUNT_DIR" ] || usage "No directory exists: $MOUNT_DIR"
MOUNT_DIR=$(cd "$MOUNT_DIR" && pwd -P)

[ "$MOUNT_DIR" = "$(cd "$HOME" && pwd -P)" ] && \
    usage "Mount directory cannot be the user's home directory" \
          "Make a subdirectory and run from there, e.g." \
          "    mkdir -p ${HOME}/OpenFOAM/$(whoami)-${VER}" \
          "    ${Script} -d ${HOME}/OpenFOAM/$(whoami)-${VER}"

if [ -n "$CUSTOM_XAUTH" ]
then
    XAUTH_PATH="${MOUNT_DIR}/.docker.xauth.$$"
    touch "${XAUTH_PATH}"

    # Generate a custom X-authority file that allows any hostname
    xauth nlist "$DISPLAY" |  sed -e 's/^..../ffff/' | \
        xauth -f "$XAUTH_PATH" nmerge -

    DOCKER_OPTIONS="-e XAUTHORITY=$XAUTH_PATH
                    -v $XAUTH_PATH:$XAUTH_PATH
                    --net=host"
fi

USER_ID=$(id -u 2> /dev/null)
[ -n "$USER_ID" ] || usage "Cannot determine current user ID"
GROUP_ID=$(id -g)

HOME_DIR='/home/firesmoke2'

echo "Launching $0"
echo "User: \"$(id -un)\" (ID $USER_ID, group ID $GROUP_ID)"

IFACES=$(ifconfig | grep ^en | cut -d: -f1)
[ "$IFACES" ] || \
    usage "Cannot find a network interface for DISPLAY with ifconfig" \
          "Please report an issue to eva.munoz.salamanca@ulb.be" \
          "    providing the output of the command: ifconfig"

for I in $IFACES
do
    IP=$(ifconfig "$I" | grep inet | awk '$1=="inet" {print $2}')
    [ "$IP" ] && break
done

[ "$IP" ] || \
    usage "Cannot find a network IP for DISPLAY with ifconfig" \
          "Please report an issue  to eva.munoz.salamanca@ulb.be" \
          "    providing the output of the command: ifconfig"

xhost + "$IP"

docker run -it \
    --rm \
    --platform linux/x86_64 \
    -e DISPLAY=$IP:0 \
    -u $USER_ID:$GROUP_ID \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $MOUNT_DIR:$HOME_DIR \
    $DOCKER_OPTIONS \
    $DOCKER_IMAGE


[ -n "$CUSTOM_XAUTH" -a -e "${XAUTH_PATH}" ] && rm "${XAUTH_PATH}"

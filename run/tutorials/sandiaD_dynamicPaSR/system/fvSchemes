/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.2                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default                        none;
    div(phi,U)                     Gauss limitedLinearV 1;
    div(phi,h)                     Gauss limitedLinear 1;
    div(phi,epsilon)               Gauss limitedLinear 1;
    div(phi,k)                     Gauss limitedLinear 1;
    div(phi,K)                     Gauss limitedLinear 1;
    div(phi,Yi)                    Gauss limitedLinear01 1;
    //div(phi,f)                          Gauss limitedLinear01 1;
    //div(phi,Chi)                        Gauss limitedLinear 1;
    //div(phi,varf)                       Gauss limitedLinear 1;
    //div(phi,f)        bounded Gauss limitedLimitedLinear 1 0 1;
    //div(phi,varf)             bounded Gauss limitedLimitedLinear 1 0 0.25;
    //div(phi,Chi)              bounded Gauss limitedLimitedLinear 1 0 0.25;
    div(phi,f)                          Gauss limitedLinear01 1;
    div(phi,Chi)                        Gauss upwind;
    div(phi,varf)                       Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U)))))  Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;

    laplacian(muEff,U)		 	Gauss linear corrected;
    laplacian(alphaEff,h) 		Gauss linear corrected;
    laplacian((rho*(1|A(U))),p) 	Gauss linear corrected;
    laplacian(DepsilonEff,epsilon) 	Gauss linear corrected;
    laplacian(DkEff,k) 			Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         orthogonal;
}

fluxRequired
{
    default         no;
    p               ;
}


// ************************************************************************* //
